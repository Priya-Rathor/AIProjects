
# 🤖 Generative AI & NLP Experiments — Priya Rathor

Welcome to my **Generative AI + NLP project repository** where I’ve explored modern LLMs, transformers, embeddings, vector stores, and multimodal models using **Hugging Face**, **OpenAI**, and **Weaviate**.

This repo contains several Jupyter notebooks and Python scripts that cover key applications in **natural language processing**, **computer vision**, and **large language models** (LLMs).

---

## 📁 Project Structure

| File / Notebook                  | Description |
|----------------------------------|-------------|
| `HandwrittenDigit.ipynb`        | CNN-based image classifier for MNIST handwritten digits |
| `Huggingface.ipynb/.py`         | Using Hugging Face Transformers (text classification, inference) |
| `huggingface.ipynb`             | Alternate experiment with different models (NLP tasks) |
| `TextToImage.ipynb`             | Generate images from text prompts using models like DALL·E / Stable Diffusion |
| `Text_summarization.ipynb`      | Summarize long articles using pretrained transformers (T5, BART) |
| `WEAVIATE.ipynb`                | Vector search engine setup using Weaviate + semantic document search |
| `openaiDemo.ipynb`              | GPT-3/GPT-4 demo with OpenAI API for chatbot, summarization |
| `requirements.txt`              | Required libraries for all notebooks and scripts |
| `readme`                        | Basic documentation placeholder (now replaced with this) |

---

## 🚀 What You’ll Learn

### ✅ Hugging Face Transformers
- Load pretrained models like `distilBERT`, `BART`, `GPT-2`
- Run text classification, summarization, generation
- Tokenization and inference pipeline

### ✅ Text Summarization
- Summarizing large documents
- Model used: T5, Pegasus, BART
- Input truncation and length control

### ✅ Text-to-Image
- Generate synthetic images from descriptions
- Models explored: DALL·E, Stable Diffusion (via 🤗 pipelines)

### ✅ Embedding + Search with Weaviate
- Vector store setup
- Upload text/documents to Weaviate
- Perform semantic similarity search

### ✅ OpenAI Integration
- Use GPT models (`text-davinci-003`, `gpt-3.5-turbo`, `gpt-4`)
- Prompt engineering
- Text generation, Q&A chatbot

### ✅ Image Classification (MNIST)
- Built CNN model using Keras/TensorFlow
- Achieved >97% accuracy on test handwritten digit data

---

## 🔧 Setup Instructions

> You can run most notebooks either on **Google Colab** or your local system.

### ✅ Clone the Repository

```bash
git clone https://github.com/Priya-Rathor/generative-ai-nlp.git
cd generative-ai-nlp
````

### ✅ Install Dependencies

Create a virtual environment (optional):

```bash
python -m venv venv
source venv/bin/activate  # Windows: venv\Scripts\activate
```

Install packages:

```bash
pip install -r requirements.txt
```

If you're running on **Colab**, install only the libraries you need per notebook (often already pre-installed).

---

## 🔐 API Keys (for OpenAI, HuggingFace, Weaviate)

* For OpenAI:

  * Create account at [https://platform.openai.com](https://platform.openai.com)
  * Get API key and use:

    ```python
    openai.api_key = "your-api-key"
    ```

* For Hugging Face:

  * Sign up at [https://huggingface.co](https://huggingface.co)
  * Use token via CLI or `transformers` pipeline

* For Weaviate:

  * Use `WCS` (Weaviate Cloud Service) or local Docker
  * Set up `.env` or directly insert into code

---

## 📦 Requirements

Main dependencies include:

```text
transformers
openai
weaviate-client
torch
tensorflow
datasets
scikit-learn
matplotlib
pandas
```

> Full list in `requirements.txt`

---

## 🧠 Key Concepts Practiced

* LLM API Usage (HuggingFace, OpenAI)
* Prompt Engineering
* Summarization, Generation, Q\&A
* Vector Embedding + Semantic Search
* Image Generation (Text → Image)
* CNN for Digit Classification

---

## 📸 Sample Outputs

| Task                 | Example                                    |
| -------------------- | ------------------------------------------ |
| Text Summarization   | 📄 → ✂️ Summarized                         |
| Text to Image        | "A house in the mountains at sunset" → 🏞️ |
| Chat with GPT        | "Explain AI like I'm 5" → 💬               |
| Semantic Search      | Query → Top 5 similar docs                 |
| Digit Classification | '7' → ✅ Predicted correctly                |

---

## 🙋‍♀️ About Me

Hi! I’m **Priya Rathor**, exploring the field of AI through hands-on experimentation with modern tools like **OpenAI**, **HuggingFace**, and **Weaviate**.

This repo is my personal playground to test ideas, learn APIs, and build smart systems. 😊

---

## ⭐️ Contributions / Suggestions

If you're also learning:

* Fork the repo
* Add your notebooks
* Submit a PR to collaborate

Or simply ⭐ this repository if you found it helpful!

---
